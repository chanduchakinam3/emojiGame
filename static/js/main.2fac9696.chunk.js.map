{"version":3,"sources":["components/EmojiCard/index.js","components/NavBar/index.js","components/WinOrLoseCard/index.js","components/EmojiGame/index.js","App.js","index.js"],"names":["EmojiCard","props","emojiDetails","clickEmoji","id","emojiName","emojiUrl","_jsx","className","children","type","onClick","src","alt","NavBar","currentScore","isGameInProgress","topScore","_jsxs","WinOrLoseCard","isWon","onClickPlayAgain","score","imageUrl","gameStatus","scoreLabel","EmojiGame","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","clickedEmojisList","resetGame","setState","renderScoreCard","emojisList","finishGameAndSetTopScore","newTopScore","isEmojiPresent","includes","clickedEmojisLength","previousState","_toConsumableArray","getShuffledEmojisList","sort","Math","random","renderEmojisList","shuffledEmojisList","map","emojiObject","_inherits","_createClass","key","value","_this$state","this","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"kTAoBeA,EAjBG,SAAAC,GAChB,IAAOC,EAA4BD,EAA5BC,aAAcC,EAAcF,EAAdE,WACdC,EAA2BF,EAA3BE,GAAIC,EAAuBH,EAAvBG,UAAWC,EAAYJ,EAAZI,SAMtB,OACEC,cAAA,MAAIC,UAAU,aAAYC,SACxBF,cAAA,UAAQG,KAAK,SAASF,UAAU,YAAYG,QANvB,WACvBR,EAAWC,EACb,EAI0EK,SACpEF,cAAA,OAAKC,UAAU,aAAaI,IAAKN,EAAUO,IAAKR,OAIxD,ECUeS,G,MAzBA,SAAAb,GACb,IAAOc,EAA4Cd,EAA5Cc,aAAcC,EAA8Bf,EAA9Be,iBAAkBC,EAAYhB,EAAZgB,SAEvC,OACEV,cAAA,OAAKC,UAAU,oBAAmBC,SAChCS,eAAA,OAAKV,UAAU,6BAA4BC,SAAA,CACzCS,eAAA,OAAKV,UAAU,2BAA0BC,SAAA,CACvCF,cAAA,OACEC,UAAU,aACVI,IAAI,6DACJC,IAAI,eAENN,cAAA,MAAIC,UAAU,QAAOC,SAAC,kBAEvBO,GACCE,eAAA,OAAKV,UAAU,mBAAkBC,SAAA,CAC/BS,eAAA,KAAGV,UAAU,QAAOC,SAAA,CAAC,UAAQM,KAC7BG,eAAA,KAAGV,UAAU,QAAOC,SAAA,CAAC,cAAYQ,YAM7C,GCOeE,G,MA3BO,SAAAlB,GACpB,IAAOmB,EAAkCnB,EAAlCmB,MAAOC,EAA2BpB,EAA3BoB,iBAAkBC,EAASrB,EAATqB,MAC1BC,EAAWH,EAJD,4DADC,6DAMXI,EAAaJ,EAAQ,UAAY,WACjCK,EAAaL,EAAQ,aAAe,QAE1C,OACEF,eAAA,OAAKV,UAAU,mBAAkBC,SAAA,CAC/BS,eAAA,OAAKV,UAAU,kBAAiBC,SAAA,CAC9BF,cAAA,MAAIC,UAAU,cAAaC,SAAEe,IAC7BjB,cAAA,KAAGC,UAAU,sBAAqBC,SAAEgB,IACpCP,eAAA,KAAGV,UAAU,sBAAqBC,SAAA,CAAEa,EAAM,SAC1Cf,cAAA,UACEG,KAAK,SACLF,UAAU,oBACVG,QAASU,EAAiBZ,SAC3B,kBAIHF,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAAA,OAAKC,UAAU,oBAAoBI,IAAKW,EAAUV,IAAI,oBAI9D,GCVMa,G,MAAS,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,YAAA,KAAAH,GAAA,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAwEZ,OAxEYP,EAAAQ,YAAA,KAAAV,EAAA,GAAAW,OAAAJ,KACbK,MAAQ,CACNC,kBAAmB,GACnBvB,kBAAkB,EAClBC,SAAU,GACXW,EAEDY,UAAY,WACVZ,EAAKa,SAAS,CAACF,kBAAmB,GAAIvB,kBAAkB,GAC1D,EAACY,EAEDc,gBAAkB,WAChB,IAAOC,EAAcf,EAAK3B,MAAnB0C,WACAJ,EAAqBX,EAAKU,MAA1BC,kBACDnB,EAAQmB,EAAkBP,SAAWW,EAAWX,OAEtD,OACEzB,cAACY,EAAa,CACZC,MAAOA,EACPC,iBAAkBO,EAAKY,UACvBlB,MAAOiB,EAAkBP,QAG/B,EAACJ,EAEDgB,yBAA2B,SAAA7B,GACzB,IAAOE,EAAYW,EAAKU,MAAjBrB,SACH4B,EAAc5B,EACdF,EAAeE,IACjB4B,EAAc9B,GAGhBa,EAAKa,SAAS,CAACxB,SAAU4B,EAAa7B,kBAAkB,GAC1D,EAACY,EAEDzB,WAAa,SAAAC,GACX,IAAOuC,EAAcf,EAAK3B,MAAnB0C,WACAJ,EAAqBX,EAAKU,MAA1BC,kBACDO,EAAiBP,EAAkBQ,SAAS3C,GAC5C4C,EAAsBT,EAAkBP,OAE1Cc,EACFlB,EAAKgB,yBAAyBI,IAE1BL,EAAWX,OAAS,IAAMgB,GAC5BpB,EAAKgB,yBAAyBD,EAAWX,QAE3CJ,EAAKa,UAAS,SAAAQ,GAAa,MAAK,CAC9BV,kBAAkB,GAADF,OAAAa,YAAMD,EAAcV,mBAAiB,CAAEnC,IACzD,IAEL,EAACwB,EAEDuB,sBAAwB,WAEtB,OADqBvB,EAAK3B,MAAnB0C,WACWS,MAAK,kBAAMC,KAAKC,SAAW,EAAG,GAClD,EAAC1B,EAED2B,iBAAmB,WACjB,IAAMC,EAAqB5B,EAAKuB,wBAEhC,OACE5C,cAAA,MAAIC,UAAU,wBAAuBC,SAClC+C,EAAmBC,KAAI,SAAAC,GAAW,OACjCnD,cAACP,EAAS,CAERE,aAAcwD,EACdvD,WAAYyB,EAAKzB,YAFZuD,EAAYtD,GAGjB,KAIV,EAACwB,CAAA,QAAA+B,YAAAjC,EAAAC,GAAAiC,YAAAlC,EAAA,EAAAmC,IAAA,SAAAC,MAED,WACE,IAAAC,EAAwDC,KAAK1B,MAAtDC,EAAiBwB,EAAjBxB,kBAAmBvB,EAAgB+C,EAAhB/C,iBAAkBC,EAAQ8C,EAAR9C,SAE5C,OACEC,eAAA,OAAKV,UAAU,gBAAeC,SAAA,CAC5BF,cAACO,EAAM,CACLC,aAAcwB,EAAkBP,OAChChB,iBAAkBA,EAClBC,SAAUA,IAEZV,cAAA,OAAKC,UAAU,kBAAiBC,SAC7BO,EAAmBgD,KAAKT,mBAAqBS,KAAKtB,sBAI3D,IAAC,CAzFY,CAASuB,cA4FTvC,IC7GTiB,G,MAAa,CACjB,CACEvC,GAAI,EACJC,UAAW,6BACXC,SACE,+EAEJ,CACEF,GAAI,EACJC,UAAW,yBACXC,SACE,2EAEJ,CACEF,GAAI,EACJC,UAAW,iBACXC,SAAU,mEAEZ,CACEF,GAAI,EACJC,UAAW,qBACXC,SACE,uEAEJ,CACEF,GAAI,EACJC,UAAW,4CACXC,SACE,+FAEJ,CACEF,GAAI,EACJC,UAAW,iBACXC,SAAU,mEAEZ,CACEF,GAAI,EACJC,UAAW,oBACXC,SACE,sEAEJ,CACEF,GAAI,EACJC,UAAW,4CACXC,SACE,+FAEJ,CACEF,GAAI,EACJC,UAAW,2BACXC,SACE,6EAEJ,CACEF,GAAI,EACJC,UAAW,+BACXC,SACE,iFAEJ,CACEF,GAAI,GACJC,UAAW,gBACXC,SAAU,kEAEZ,CACEF,GAAI,GACJC,UAAW,8BACXC,SACE,kFAMS4D,EAFH,WAAH,OAAS3D,cAACmB,EAAS,CAACiB,WAAYA,GAAc,ECxEvDwB,IAASC,OACP7D,cAAC8D,IAAMC,WAAU,CAAA7D,SACfF,cAAC2D,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.2fac9696.chunk.js","sourcesContent":["// Write your code here.\nimport './index.css'\n\nconst EmojiCard = props => {\n  const {emojiDetails, clickEmoji} = props\n  const {id, emojiName, emojiUrl} = emojiDetails\n\n  const onClickEmojiCard = () => {\n    clickEmoji(id)\n  }\n\n  return (\n    <li className=\"emoji-item\">\n      <button type=\"button\" className=\"emoji-btn\" onClick={onClickEmojiCard}>\n        <img className=\"emoji-icon\" src={emojiUrl} alt={emojiName} />\n      </button>\n    </li>\n  )\n}\n\nexport default EmojiCard\n","// Write your code here.\nimport './index.css'\n\nconst NavBar = props => {\n  const {currentScore, isGameInProgress, topScore} = props\n\n  return (\n    <nav className=\"nav-bar-container\">\n      <div className=\"title-with-score-container\">\n        <div className=\"logo-and-title-container\">\n          <img\n            className=\"emoji-logo\"\n            src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png\"\n            alt=\"emoji logo\"\n          />\n          <h1 className=\"title\">Emoji Game</h1>\n        </div>\n        {isGameInProgress && (\n          <div className=\"scores-container\">\n            <p className=\"score\">Score: {currentScore}</p>\n            <p className=\"score\">Top Score: {topScore}</p>\n          </div>\n        )}\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","// Write your code here.\nimport './index.css'\n\nconst LOSE_IMAGE = 'https://assets.ccbp.in/frontend/react-js/lose-game-img.png'\nconst WON_IMAGE = 'https://assets.ccbp.in/frontend/react-js/won-game-img.png'\n\nconst WinOrLoseCard = props => {\n  const {isWon, onClickPlayAgain, score} = props\n  const imageUrl = isWon ? WON_IMAGE : LOSE_IMAGE\n  const gameStatus = isWon ? 'You Won' : 'You Lose'\n  const scoreLabel = isWon ? 'Best Score' : 'Score'\n\n  return (\n    <div className=\"win-or-lose-card\">\n      <div className=\"details-section\">\n        <h1 className=\"game-status\">{gameStatus}</h1>\n        <p className=\"current-score-label\">{scoreLabel}</p>\n        <p className=\"current-score-value\">{score}/12</p>\n        <button\n          type=\"button\"\n          className=\"play-again-button\"\n          onClick={onClickPlayAgain}\n        >\n          Play Again\n        </button>\n      </div>\n      <div className=\"image-section\">\n        <img className=\"win-or-lose-image\" src={imageUrl} alt=\"win or lose\" />\n      </div>\n    </div>\n  )\n}\n\nexport default WinOrLoseCard\n","/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\nimport {Component} from 'react'\n\nimport EmojiCard from '../EmojiCard'\nimport NavBar from '../NavBar'\nimport WinOrLoseCard from '../WinOrLoseCard'\n\nimport './index.css'\n\nclass EmojiGame extends Component {\n  state = {\n    clickedEmojisList: [],\n    isGameInProgress: true,\n    topScore: 0,\n  }\n\n  resetGame = () => {\n    this.setState({clickedEmojisList: [], isGameInProgress: true})\n  }\n\n  renderScoreCard = () => {\n    const {emojisList} = this.props\n    const {clickedEmojisList} = this.state\n    const isWon = clickedEmojisList.length === emojisList.length\n\n    return (\n      <WinOrLoseCard\n        isWon={isWon}\n        onClickPlayAgain={this.resetGame}\n        score={clickedEmojisList.length}\n      />\n    )\n  }\n\n  finishGameAndSetTopScore = currentScore => {\n    const {topScore} = this.state\n    let newTopScore = topScore\n    if (currentScore > topScore) {\n      newTopScore = currentScore\n    }\n\n    this.setState({topScore: newTopScore, isGameInProgress: false})\n  }\n\n  clickEmoji = id => {\n    const {emojisList} = this.props\n    const {clickedEmojisList} = this.state\n    const isEmojiPresent = clickedEmojisList.includes(id)\n    const clickedEmojisLength = clickedEmojisList.length\n\n    if (isEmojiPresent) {\n      this.finishGameAndSetTopScore(clickedEmojisLength)\n    } else {\n      if (emojisList.length - 1 === clickedEmojisLength) {\n        this.finishGameAndSetTopScore(emojisList.length)\n      }\n      this.setState(previousState => ({\n        clickedEmojisList: [...previousState.clickedEmojisList, id],\n      }))\n    }\n  }\n\n  getShuffledEmojisList = () => {\n    const {emojisList} = this.props\n    return emojisList.sort(() => Math.random() - 0.5)\n  }\n\n  renderEmojisList = () => {\n    const shuffledEmojisList = this.getShuffledEmojisList()\n\n    return (\n      <ul className=\"emojis-list-container\">\n        {shuffledEmojisList.map(emojiObject => (\n          <EmojiCard\n            key={emojiObject.id}\n            emojiDetails={emojiObject}\n            clickEmoji={this.clickEmoji}\n          />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {clickedEmojisList, isGameInProgress, topScore} = this.state\n\n    return (\n      <div className=\"app-container\">\n        <NavBar\n          currentScore={clickedEmojisList.length}\n          isGameInProgress={isGameInProgress}\n          topScore={topScore}\n        />\n        <div className=\"emoji-game-body\">\n          {isGameInProgress ? this.renderEmojisList() : this.renderScoreCard()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EmojiGame\n","import EmojiGame from './components/EmojiGame'\n\nimport './App.css'\n\nconst emojisList = [\n  {\n    id: 0,\n    emojiName: 'Face with stuck out tongue',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-img.png',\n  },\n  {\n    id: 1,\n    emojiName: 'Face with head bandage',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-head-bandage-img.png',\n  },\n  {\n    id: 2,\n    emojiName: 'Face with hugs',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-hugs-img.png',\n  },\n  {\n    id: 3,\n    emojiName: 'Face with laughing',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-img.png',\n  },\n  {\n    id: 4,\n    emojiName: 'Laughing face with hand in front of mouth',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-with-hand-infront-mouth-img.png',\n  },\n  {\n    id: 5,\n    emojiName: 'Face with mask',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-mask-img.png',\n  },\n  {\n    id: 6,\n    emojiName: 'Face with silence',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-silence-img.png',\n  },\n  {\n    id: 7,\n    emojiName: 'Face with stuck out tongue and winked eye',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-and-winking-eye-img.png',\n  },\n  {\n    id: 8,\n    emojiName: 'Grinning face with sweat',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/grinning-face-with-sweat-img.png',\n  },\n  {\n    id: 9,\n    emojiName: 'Smiling face with heart eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-heart-eyes-img.png',\n  },\n  {\n    id: 10,\n    emojiName: 'Grinning face',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/grinning-face-img.png',\n  },\n  {\n    id: 11,\n    emojiName: 'Smiling face with star eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-star-eyes-img.png',\n  },\n]\n\nconst App = () => <EmojiGame emojisList={emojisList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}